@namespace LastWeek.Shared.EntryModules

<div>
    @if (Entry.Answers != null)
    {
        @foreach (var answer in Entry.Answers.Select((a, i) => new { Answer = a, Index = i }))
        {
            <InputText placeholder="@Entry.Question" Value="@answers[answer.Index].Value" ValueExpression="@(() => answers[answer.Index].Value)"
            ValueChanged="@((string value) => OnValueChanged(value, answer.Index))" />
        }
    }
    <input type="button" @onclick="AddAnswer" value="Add" />
</div>

@code {
    [Parameter]
    public SimpleEntry Entry { get; set; } = new() { Answers = new() };
    private List<FormResponse> answers = new();

    protected override void OnParametersSet()
    {
        base.OnParametersSet();
        if (Entry.Answers == null) Entry.Answers = new();
        answers = Entry.Answers.Select(s => new FormResponse { Value = s }).ToList();
    }

    protected void AddAnswer()
    {
        if (Entry.Answers == null) Entry.Answers = new();
        Entry.Answers.Add(string.Empty);
        answers.Add(new FormResponse { Value = string.Empty });
    }

    private void OnValueChanged(string value, int index)
    {
        Entry.Answers[index] = answers[index].Value = value;
    }
}